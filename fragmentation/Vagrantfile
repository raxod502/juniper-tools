# -*- mode: ruby -*-
# vi: set ft=ruby :

def enabled?(var)
  val = ENV[var.upcase]
  if val == nil
    return false
  elsif val.empty?
    return false
  # We could definitely be more user-friendly and accept "no", "0",
  # etc. as false, but that logic is hard to implement in the Makefile
  # and I'd like to be consistent.
  else
    return true
  end
end

Vagrant.configure("2") do |config|
  config.vagrant.plugins = ["vagrant-disksize", "vagrant-reload", "vagrant-vbguest"]

  config.vm.provider "virtualbox" do |v|
    v.gui = !enabled?("headless")
  end

  # sender (192.168.33.10) <-> sender_router
  config.vm.define "sender", primary: true do |sender|
    sender.vm.network "private_network", ip: "192.168.33.10"
    sender.vm.hostname = "sender"
    if enabled?("routers")
      sender.vm.provision "shell", run: "always", inline: "sudo route del default"
      sender.vm.provision "shell", run: "always", inline: "sudo route add default gw 192.168.33.100"
    end
  end
  config.vm.define "receiver" do |receiver|
    if enabled?("routers")
      receiver.vm.network "private_network", ip: "192.168.66.11"
    else
      receiver.vm.network "private_network", ip: "192.168.33.11"
    end
    receiver.vm.hostname = "receiver"
    if enabled?("routers")
      receiver.vm.provision "shell", run: "always", inline: "sudo route del default"
      receiver.vm.provision "shell", run: "always", inline: "sudo route add default gw 192.168.66.201"
    end
  end

  if enabled?("routers")
    config.vm.define "sender_router" do |router|
      router.vm.network "private_network", ip: "192.168.33.100"
      router.vm.network "private_network", ip: "192.168.50.101"
      router.vm.hostname = "sender_router"
      router.vm.provision "shell", run: "always", inline: "sudo route add -net 192.168.66.0/24 gw 192.168.50.200 dev enp0s9"
      router.vm.provision "shell", run: "always", inline: "sudo sysctl -w net.ipv4.ip_forward=1"
    end

    config.vm.define "receiver_router" do |router|
      router.vm.network "private_network", ip: "192.168.66.201"
      router.vm.network "private_network", ip: "192.168.50.200"
      router.vm.hostname = "receiver_router"
      router.vm.provision "shell", run: "always", inline: "sudo route add -net 192.168.33.0/24 gw 192.168.50.101 dev enp0s9"
      router.vm.provision "shell", run: "always", inline: "sudo sysctl -w net.ipv4.ip_forward=1"
    end
  end

  config.ssh.forward_env = ["HEADLESS", "ROUTERS", "VM"]

  config.vm.box = "ubuntu/bionic64"
  config.disksize.size = "50GB"
  config.vm.provision :shell, path: "scripts/provision.bash"
  config.vm.provision :reload

  if File.directory? "../../juniper-linux"
    config.vm.synced_folder "../../juniper-linux", "/linux"
  elsif File.directory? "../../linux"
    config.vm.synced_folder "../../linux", "/linux"
  end
end
